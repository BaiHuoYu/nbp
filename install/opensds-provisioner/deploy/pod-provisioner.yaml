apiVersion: v1
kind: ServiceAccount
metadata:
  name: opensds-provisioner

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opensds-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["opensds-provisioner"]
    verbs: ["use"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-opensds-provisioner
subjects:
  - kind: ServiceAccount
    name: opensds-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: opensds-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Pod
apiVersion: v1
metadata:
  name: opensds-provisioner
spec:
  serviceAccount: opensds-provisioner
  containers:
    - name: opensds-provisioner
      image: opensdsio/opensds-provisioner:latest
      securityContext:
      args:
        - "-endpoint=$(OPENSDS_ENDPOINT)"
      env:
        - name: OPENSDS_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: opensds-provisioner-configmap
              key: opensdsendpoint
      imagePullPolicy: "IfNotPresent"
